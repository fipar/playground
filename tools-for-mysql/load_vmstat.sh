#!/bin/bash 

# As input, this expects one more more TS-vmstat-overall files as generated by pt-stalk
# This is an example for how to graph multiple Y values over the same X

# TODO: labels

HEADER="seqno,r,b,swpd,free,buff,cache,si,so,bi,bo,in,cs,us,sy,id,wa,st"
OUTPUTFILE=/tmp/output_vmstat.$$

trap "rm -f $OUTPUTFILE RSCRIPT.$$ RSCRIPT.$$.Rout" SIGTERM EXIT

echo $HEADER>$OUTPUTFILE
# assume that if argc > 0 then args are vmstat files, else read from stdin
[ $# -gt 0 ] && {
	shift
	cat $* |egrep -v 'swpd|system'|grep -v ^$|sed 's/^  *//g'|sed 's/  */,/g'|awk '{print NR, ",", $0}'>>$OUTPUTFILE
} || {
	cat|egrep -v 'swpd|system'|grep -v ^$|sed 's/^  *//g'|sed 's/  */,/g'|awk '{print NR, ",", $0}'>>$OUTPUTFILE
}

# this is *really* just a bad concept, so I don't forget the syntax involved. 
# Some of the things I want to resolve: 
# - TODO: set a proper range for the y axis depending on the variable being graphed
# - TODO: some may be ok on an individual graph, some may work better on a combined graph (i.e. combine bi/bo, us/si/wa, r/b)

cat<<EOF>RSCRIPT.$$
require(ggplot2)
require(ggthemes)
data <- read.csv("$OUTPUTFILE", header=TRUE, sep=",")
EOF

cat<<EOF>>RSCRIPT.$$
png("vmstat_cpu_genplot.png",height=800,width=800)
ggplot(data=data, aes(x=seqno)) + geom_point(aes(y=us),colour="blue") + geom_point(aes(y=id),colour="green") + geom_point(aes(y=sy),colour="magenta") + theme(panel.grid=element_blank(), panel.background=element_blank(), axis.text.x=element_blank(), axis.title.x=element_blank(), axis.title.y=element_blank() )
dev.off()
png("vmstat_io_genplot.png",height=800,width=800)
ggplot(data=data, aes(x=seqno)) + geom_point(aes(y=bi),colour="cyan") + geom_point(aes(y=bo),colour="pink") + theme(panel.grid=element_blank(), panel.background=element_blank(), axis.text.x=element_blank(), axis.title.x=element_blank(), axis.title.y=element_blank() )
dev.off()
EOF

R CMD BATCH ./RSCRIPT.$$

